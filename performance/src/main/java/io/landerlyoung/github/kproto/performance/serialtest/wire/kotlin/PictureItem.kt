// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto.proto
package io.landerlyoung.github.kproto.performance.serialtest.wire.kotlin

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.TagHandler
import com.squareup.wire.WireField
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.String
import kotlin.jvm.JvmField
import okio.ByteString

data class PictureItem(@field:WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter.STRING")
        val pictureUrl: String? = null, val unknownFields: ByteString = ByteString.EMPTY) :
        Message<PictureItem, PictureItem.Builder>(ADAPTER, unknownFields) {
    @Deprecated(
            message = "Shouldn't be used in Kotlin",
            level = DeprecationLevel.HIDDEN
    )
    override fun newBuilder(): Builder = Builder(this.copy())

    class Builder(private val message: PictureItem) : Message.Builder<PictureItem, Builder>() {
        override fun build(): PictureItem = message
    }

    companion object {
        @JvmField
        val ADAPTER: ProtoAdapter<PictureItem> = object : ProtoAdapter<PictureItem>(
            FieldEncoding.LENGTH_DELIMITED, 
            PictureItem::class.java
        ) {
            override fun encodedSize(value: PictureItem): Int = 
                ProtoAdapter.STRING.encodedSizeWithTag(1, value.pictureUrl) +
                value.unknownFields.size

            override fun encode(writer: ProtoWriter, value: PictureItem) {
                ProtoAdapter.STRING.encodeWithTag(writer, 1, value.pictureUrl)
                writer.writeBytes(value.unknownFields)
            }

            override fun decode(reader: ProtoReader): PictureItem {
                var pictureUrl: String? = null
                val unknownFields = reader.forEachTag { tag ->
                    when (tag) {
                        1 -> pictureUrl = ProtoAdapter.STRING.decode(reader)
                        else -> TagHandler.UNKNOWN_TAG
                    }
                }
                return PictureItem(
                    pictureUrl = pictureUrl,
                    unknownFields = unknownFields
                )
            }
        }
    }
}
