// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto.proto at 30:1
package io.landerlyoung.github.kproto.parser.serialtest.wire;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class SearchRequest extends Message<SearchRequest, SearchRequest.Builder> {
  public static final ProtoAdapter<SearchRequest> ADAPTER = new ProtoAdapter_SearchRequest();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_QUERY = "";

  public static final Integer DEFAULT_PAGE_NUMBER = 0;

  public static final Integer DEFAULT_RESULT_PER_PAGE = 0;

  public static final ByteString DEFAULT_BUFFER = ByteString.EMPTY;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String query;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer page_number;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer result_per_page;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> results;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString buffer;

  public SearchRequest(String query, Integer page_number, Integer result_per_page, List<String> results, ByteString buffer) {
    this(query, page_number, result_per_page, results, buffer, ByteString.EMPTY);
  }

  public SearchRequest(String query, Integer page_number, Integer result_per_page, List<String> results, ByteString buffer, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.query = query;
    this.page_number = page_number;
    this.result_per_page = result_per_page;
    this.results = Internal.immutableCopyOf("results", results);
    this.buffer = buffer;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.query = query;
    builder.page_number = page_number;
    builder.result_per_page = result_per_page;
    builder.results = Internal.copyOf("results", results);
    builder.buffer = buffer;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SearchRequest)) return false;
    SearchRequest o = (SearchRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(query, o.query)
        && Internal.equals(page_number, o.page_number)
        && Internal.equals(result_per_page, o.result_per_page)
        && results.equals(o.results)
        && Internal.equals(buffer, o.buffer);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (query != null ? query.hashCode() : 0);
      result = result * 37 + (page_number != null ? page_number.hashCode() : 0);
      result = result * 37 + (result_per_page != null ? result_per_page.hashCode() : 0);
      result = result * 37 + results.hashCode();
      result = result * 37 + (buffer != null ? buffer.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (query != null) builder.append(", query=").append(query);
    if (page_number != null) builder.append(", page_number=").append(page_number);
    if (result_per_page != null) builder.append(", result_per_page=").append(result_per_page);
    if (!results.isEmpty()) builder.append(", results=").append(results);
    if (buffer != null) builder.append(", buffer=").append(buffer);
    return builder.replace(0, 2, "SearchRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SearchRequest, Builder> {
    public String query;

    public Integer page_number;

    public Integer result_per_page;

    public List<String> results;

    public ByteString buffer;

    public Builder() {
      results = Internal.newMutableList();
    }

    public Builder query(String query) {
      this.query = query;
      return this;
    }

    public Builder page_number(Integer page_number) {
      this.page_number = page_number;
      return this;
    }

    public Builder result_per_page(Integer result_per_page) {
      this.result_per_page = result_per_page;
      return this;
    }

    public Builder results(List<String> results) {
      Internal.checkElementsNotNull(results);
      this.results = results;
      return this;
    }

    public Builder buffer(ByteString buffer) {
      this.buffer = buffer;
      return this;
    }

    @Override
    public SearchRequest build() {
      return new SearchRequest(query, page_number, result_per_page, results, buffer, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SearchRequest extends ProtoAdapter<SearchRequest> {
    ProtoAdapter_SearchRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, SearchRequest.class);
    }

    @Override
    public int encodedSize(SearchRequest value) {
      return (value.query != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.query) : 0)
          + (value.page_number != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.page_number) : 0)
          + (value.result_per_page != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.result_per_page) : 0)
          + ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(4, value.results)
          + (value.buffer != null ? ProtoAdapter.BYTES.encodedSizeWithTag(5, value.buffer) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SearchRequest value) throws IOException {
      if (value.query != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.query);
      if (value.page_number != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.page_number);
      if (value.result_per_page != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.result_per_page);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 4, value.results);
      if (value.buffer != null) ProtoAdapter.BYTES.encodeWithTag(writer, 5, value.buffer);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SearchRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.query(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.page_number(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.result_per_page(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.results.add(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.buffer(ProtoAdapter.BYTES.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SearchRequest redact(SearchRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
